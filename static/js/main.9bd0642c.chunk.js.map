{"version":3,"sources":["components/hotels/hotel.js","components/hotels/hotelList.js","components/Navbar.js","components/hotels/index.js","components/register/RegisterForm.js","components/login/loginForm.js","components/home/homePage.js","components/bookRoom/BookRoomPage.js","components/addReview/addReviewPage.js","components/viewReviews/review.js","components/viewReviews/ReviewList.js","components/viewReviews/index.js","components/bookings/booking.js","components/bookings/bookingsList.js","components/bookings/index.js","components/reschedule/reschedulePage.js","App.js","serviceWorker.js","index.js"],"names":["Hotel","hotelId","hotelName","city","amenities","phoneNo","address","imageUrl","props","className","src","alt","type","onClick","history","replace","HotelList","hotels","hotelList","map","hotel","key","id","Navbar","useState","userId","setUserId","links","setLinks","useEffect","localStorage","getItem","to","removeItem","data-toggle","data-target","aria-controls","aria-expanded","aria-label","HotelPage","state","axios","get","then","res","setState","data","this","React","Component","AddUser","name","setName","setAddress","setPhoneNo","email","setEmail","password","setPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleKeyUp","e","target","length","validateName","validatePhone","test","validateEmail","validatePassword","addUser","user","users","flag","forEach","post","setTimeout","onSubmit","preventDefault","value","onChange","onKeyUp","required","LoginUser","handleChange","Number","handleSubmit","newloginUser","loginUser","setItem","catch","HomePage","BookRoomPage","startDate","setStartDate","endDate","setEndDate","noOfPersons","setNoOfPersons","noOfRooms","setNoOfRooms","typeOfRoom","setTypeOfRoom","bookRoom","booking","match","params","Date","newBooking","AddReviewPage","reviews","setReviews","addReview","review","reviewsArr","push","patch","status","newReview","rows","Review","ReviewsList","reviewList","ViewReviewsPage","Booking","bookingId","setBooking","toLocaleDateString","console","log","delete","bookingArr","defaultProps","BookingsList","bookingsList","bookings","BookingsPage","setBookings","ReschedulePage","reschedulebook","message","App","path","exact","component","LoginPage","RegisterPage","ViewReviewPage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9bd0642c.chunk.js","sourcesContent":["import React from \"react\";\nimport './hotel.css';\n\nconst Hotel = ({ hotelId, hotelName, city, amenities, phoneNo, address, imageUrl, props }) => {\n    const bookRoom = () => {\n        props.history.replace('/bookRoom/' + hotelId + '/' + hotelName);\n    }\n    const addReview = () => {\n        props.history.replace('/addReview/' + hotelId + '/'+ hotelName);\n    }\n    const viewReview = () => {\n        props.history.replace('/viewReview/' + hotelId);\n\n    }\n    return (\n        <>\n            <div className='col-md-2'></div>\n            <div className=\"col-md-8 cards\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <img src={'./images/' + imageUrl} className=\"img-thumbnail cardImg\" alt=\"...\" />\n                    </div>\n                    <div className=\"col-md-7\">\n                        <div className=\"cardcontent\">\n                            <h5 className=\"card-title\">{hotelName}</h5>\n                            <p className=\"cardText\">City : {city}</p>\n                            <p className=\"cardText\"> Amenities : {amenities}</p>\n                            <p className=\"cardText\">Address : {address}</p>\n                            <p className=\"cardText\">Contact No : {phoneNo}</p>\n                        </div>\n                    </div>\n                    <div className='col-md-2'>\n                        <button type='button' className='hotelBtn' onClick={bookRoom}>Book A Room</button>\n                        <button type='button' className='hotelBtn' onClick={addReview}>Add Review</button>\n                        <button type='button' className='hotelBtn' onClick={viewReview}>View Review</button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default Hotel;\n","import React from \"react\";\nimport Hotel from \"./hotel\";\n\nconst HotelList = ({ hotels,props }) => {\n    const hotelList = hotels.map((hotel) => {\n        return (\n            <Hotel\n                key={hotel.hotelName}\n                hotelId={hotel.id}\n                hotelName={hotel.hotelName}\n                city={hotel.city}\n                amenities={hotel.amenities}\n                phoneNo={hotel.phoneNo}\n                address={hotel.address}\n                imageUrl={hotel.imageUrl}\n                props = {props}\n            />\n        );\n    });\n\n    return <><br /><div className=\"row\">{hotelList}</div></>;\n};\nexport default HotelList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../App.css';\n\nconst Navbar = () => {\n\tconst [userId, setUserId] = useState('');\n\tconst [links, setLinks] = useState('');\n\n\tuseEffect(() => {\n\t\tsetUserId(localStorage.getItem('userId'));\n\t\tconst logout = () => {\n\t\t\tlocalStorage.removeItem('userId');\n\t\t\tsetUserId('');\n\t\t}\n\n\t\tsetLinks((\n\t\t\t<ul className=\"navbar-nav ml-auto\">\n\t\t\t\t<li className=\"nav-item active\">\n\t\t\t\t\t<Link className=\"nav-link link active\" to=\"/home\">\n\t\t\t\t\t\tHome\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link link\" to=\"/hotels\">\n\t\t\t\t\t\tHotels\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link link\" to=\"/bookings\">\n\t\t\t\t\t\tBookings\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link className=\"nav-link link\" to=\"/login\" onClick={logout}>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t</ul>))\n\n\t\t// else {\n\t\t// \tsetLinks(<ul className=\"navbar-nav ml-auto\">\n\t\t// \t\t<li className=\"nav-item active\">\n\t\t// \t\t\t<Link className=\"nav-link link active\" to=\"/home\">\n\t\t// \t\t\t\tHome\n\t\t// \t\t</Link>\n\t\t// \t\t</li>\n\t\t// \t\t<li className=\"nav-item\">\n\t\t// \t\t\t<Link className=\"nav-link link\" to=\"/login\">\n\t\t// \t\t\t\tLogin\n\t\t// \t\t</Link>\n\t\t// \t\t</li>\n\t\t// \t\t<li className=\"nav-item\">\n\t\t// \t\t\t<Link className=\"nav-link link\" to=\"/register\">\n\t\t// \t\t\t\tRegister\n\t\t// \t\t</Link>\n\t\t// \t\t</li>\n\t\t// \t</ul>)\n\t\t// }\n\t}, [userId])\n\n\treturn (\n\t\t<nav className=\"nav navbar navbar-expand-lg\">\n\t\t\t<Link className=\"navbar-brand brand\" to=\"/\">\n\t\tBookMyStay\n      </Link>\n\t\t\t<button\n\t\t\t\tclassName=\"navbar-toggler\"\n\t\t\t\ttype=\"button\"\n\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\tdata-target=\"#navbarNav\"\n\t\t\t\taria-controls=\"navbarNav\"\n\t\t\t\taria-expanded=\"false\"\n\t\t\t\taria-label=\"Toggle navigation\"\n\t\t\t>\n\t\t\t\t<i className=\"fa fa-bars bar\"></i>\n\t\t\t</button>\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t{links}\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\nexport default Navbar;\n","import React from \"react\";\nimport axios from 'axios';\nimport HotelList from \"./hotelList\";\nimport Navbar from '../Navbar';\n\nclass HotelPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            hotels: []\n        }\n    }\n    componentDidMount() {\n        axios.get('http://localhost:4000/hotels').then((res) => {\n            this.setState({ hotels: res.data })\n        })\n    }\n    render() {\n        return (\n            <>\n                <Navbar />\n                <HotelList hotels={this.state.hotels} props={this.props} />\n            </>\n        )\n    }\n}\n\nexport default HotelPage;","import React, { useState } from 'react';\nimport './RegisterForm.css';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst AddUser = (props) => {\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [phoneNo, setPhoneNo] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newUser = { name: name, address: address, phoneNo: phoneNo, email: email, password: password }\n        addUser(newUser);\n    }\n    const handleKeyUp = (e) => {\n        const validateName = (name) => {\n            if (name.length >= 3) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        const validatePhone = (phoneNo) => {\n            if (phoneNo >= 1000000000 && phoneNo <= 9999999999) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        const validateEmail = (email) => {\n            var re = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n            return re.test(email)\n        }\n        const validatePassword = (password) => {\n            if (password.length > 8 && password.length <= 12) {\n                return true\n            } else return false\n        }\n        if (e.target.name === 'name') {\n            if (!validateName(name)) {\n                setErrorMessage('Name should have atleast 3 characters')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'phoneno') {\n            if (!validatePhone(phoneNo)) {\n                setErrorMessage('Phone No should have 10 digits')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'email') {\n            if (!validateEmail(email)) {\n                setErrorMessage('Email Id should be a valid one')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'password') {\n            if (!validatePassword(password)) {\n                setErrorMessage('Password should have atleast 8 and atmost 12 characters')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n    }\n    const addUser = (user) => {\n        axios.get('http://localhost:4000/users').then((users) => {\n            var flag = false;\n            users.data.forEach((user) => {\n                if (user.email === email) {\n                    flag = true;\n                }\n            })\n            if (!flag) {\n                axios.post('http://localhost:4000/users', user).then((res) => {\n                    if (res.data) {\n                        setSuccessMessage(\"You are registered with the user id : \" + res.data.id);\n                        setErrorMessage('');\n                        setTimeout(() => { props.history.replace('/login') }, 1500);\n                    }\n                    else {\n                        setErrorMessage(\"User registration failed\");\n                        setSuccessMessage('');\n                    }\n                })\n            } else{\n                setErrorMessage(\"User already exists with this email id\")\n            }\n\n        })\n    }\n    return (\n        <>\n            <nav className=\"nav navbar navbar-expand-lg\">\n                <Link className=\"navbar-brand brand\" to=\"/\">\n                    BonStay\n      </Link>\n            </nav>\n            <div className=\"container\"><br /><br />\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <img src={'./images/secret-garden-wooden-door-with-wreath.jpg'} alt='Register' className='regImage' />\n                            </td>\n                            <td className='formtray'><form onSubmit={handleSubmit}>\n                                <div className='form-group'>\n                                    <label>Name:</label>\n                                    <input type='text' value={name} onChange={(e) => setName(e.target.value)} onKeyUp={handleKeyUp} className='form-control myinput' name='name' required />\n                                </div>\n                                <div className='form-group'>\n                                    <label>Address:</label>\n                                    <input type='text' className='form-control myinput' value={address} onChange={(e) => setAddress(e.target.value)} onKeyUp={handleKeyUp} required />\n                                </div>\n                                <div className='form-group'>\n                                    <label>Phone No</label>\n                                    <input type='number' className='form-control myinput' value={phoneNo} name='phoneno' onChange={(e) => setPhoneNo(e.target.value)} onKeyUp={handleKeyUp} required />\n                                </div>\n                                <div className='form-group'>\n                                    <label>Email Id</label>\n                                    <input type='email' name='email' className='form-control myinput' value={email} onChange={(e) => setEmail(e.target.value)} onKeyUp={handleKeyUp} required />\n                                </div>\n                                <div className='form-group'>\n                                    <label>Password</label>\n                                    <input type='password' className='form-control myinput' name='password' value={password} onChange={(e) => setPassword(e.target.value)} onKeyUp={handleKeyUp} required />\n                                </div><div></div>\n                                <button type='submit' className='regbtn'>Register</button><br /><br />\n                                <span className='text-success'>{successMessage}</span>\n                                <span className='text-danger'>{errorMessage}</span><br />\n                                <Link to='/login'>Login</Link> with your existing account.<br />\n                            </form></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n}\n\nexport default AddUser;","import React from 'react';\nimport './LoginForm.css';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\n\nclass LoginUser extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            userId: '',\n            password: '',\n            successMessage: '',\n            errorMessage: ''\n        }\n    }\n    handleChange = (e) => {\n        const validateUserId = () => {\n            if (Number(e.target.value)) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        const validatePassword = () => {\n            if (e.target.value.length >= 8 && e.target.value.length <= 12) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        if (e.target.name === 'userId') {\n            this.setState({ userId: e.target.value })\n            if (!validateUserId()) {\n                this.setState({ errorMessage: 'UserId should be a number' });\n            }\n            else {\n                this.setState({ errorMessage: '' });\n            }\n        }\n        else if (e.target.name === 'password') {\n            this.setState({ password: e.target.value })\n            if (!validatePassword()) {\n                this.setState({ errorMessage: 'Password should atleat have 8 and atmost 12 characters' });\n            }\n            else {\n                this.setState({ errorMessage: '' });\n            }\n        }\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const newloginUser = { userId: this.state.userId, password: this.state.password }\n        this.loginUser(newloginUser);\n    }\n\n    loginUser = (user) => {\n        axios.get('http://localhost:4000/users?id=' + user.userId + '&password=' + user.password).then((res) => {\n            if (res.data.length > 0) {\n                localStorage.setItem('userId', user.userId);\n                this.setState({ successMessage: 'You logged in successfully' });\n                this.setState({ errorMessage: '' });\n                setTimeout(() => {\n                    this.props.history.replace('/home');\n                }, 1500);\n            } else {\n                this.setState({ errorMessage: 'Incorrect UserId or Password' });\n                this.setState({ successMessage: '' });\n            }\n        }).catch(() => {\n\n        })\n    }\n    render() {\n        return (\n            <>\n                <nav className=\"nav navbar navbar-expand-lg\">\n                    <Link className=\"navbar-brand brand\" to=\"/\">\n                        BonStay\n      </Link>\n                </nav>\n                <div className='formholder'>\n                    <form onSubmit={this.handleSubmit}><br />\n                        <p className='mytext'>BonStay with Us</p>\n                        <div className='form-group'>\n                            <label>UserId:</label>\n                            <input type='number' required value={this.state.userId} onChange={this.handleChange} name='userId' className='form-control myinput' />\n                        </div>\n                        <div className='form-group'>\n                            <label>Password</label>\n                            <input type='password' required className='form-control myinput' value={this.state.password} name='password' onChange={this.handleChange} />\n                        </div><div></div>\n                        <button type='submit' className='regbtn'>Login</button><br /><br />\n                        <span className='text-success'>{this.state.successMessage}</span>\n                        <span className='text-danger'>{this.state.errorMessage}</span><br />\n                        <div><Link to='/register'>Sign Up</Link> to create a new account.</div>\n                        <br /><br />\n\n                    </form>\n                </div></>\n        );\n    }\n}\n\nexport default LoginUser;","import React from 'react';\nimport './home.css';\nimport Navbar from '../Navbar';\n\n\nconst HomePage = () => {\n  return (\n    <>\n      <Navbar />\n      <div className='container holder'>\n        <p className='mycontent'>\n\t\t    <br/>Experience the art of worry-free travel and create unforgettable memories with <strong>BookMyStay</strong>.<br/> Discover elegantly designed spaces featuring modern amenities that redefine comfort and luxury.<br/> With our lightning-fast BookMyStay app, your dream getaway is just a few taps away.<br/>\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport './bookRoom.css';\nimport axios from 'axios';\nimport Navbar from '../Navbar';\n\nconst BookRoomPage = (props) => {\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [noOfPersons, setNoOfPersons] = useState('');\n    const [noOfRooms, setNoOfRooms] = useState('');\n    const [typeOfRoom, setTypeOfRoom] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newBooking = { startDate: startDate, endDate: endDate, noOfPersons: Number(noOfPersons), noOfRooms: Number(noOfRooms), typeOfRoom: typeOfRoom }\n        bookRoom(newBooking);\n    }\n    const bookRoom = (booking) => {\n        booking['hotelId'] = Number(props.match.params.hotelId);\n        booking['hotelName'] = props.match.params.hotelName;\n        const userId = localStorage.getItem('userId');\n        booking['userId'] = Number(userId);\n        axios.post('http://localhost:4000/bookings', booking).then((res) => {\n            setSuccessMessage('Booked a Room successfully');\n            setErrorMessage('');\n        })\n    }\n    const handleChange = (e) => {\n        if (e.target.name === 'startDate') {\n            setStartDate(e.target.value)\n            const validateStartDate = () => {\n                if (new Date(e.target.value) >= new Date()) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            if (!validateStartDate()) {\n                setErrorMessage('Start Date should not be a previous date')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'endDate') {\n            setEndDate(e.target.value)\n            const validateEndDate = () => {\n                if (new Date(e.target.value) >= new Date(startDate)) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            if (!startDate) {\n                setErrorMessage('Set Start Date first')\n            }\n            else if (!validateEndDate()) {\n                setErrorMessage('End Date should not be less than Start Date')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'noOfPersons') {\n            setNoOfPersons(e.target.value)\n            const validateNoOfPersons = () => {\n                if (e.target.value > 0 && e.target.value <= 5) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            if (!validateNoOfPersons()) {\n                setErrorMessage('No of Persons should be greater than 0 and less than or equal to 5 ')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'noOfRooms') {\n            setNoOfRooms(e.target.value)\n            const validateNoOfRooms = () => {\n                if (e.target.value > 0 && e.target.value <= 3) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            if (!validateNoOfRooms()) {\n                setErrorMessage('No of Rooms should be greater than 0 and less than or equal to 3 ')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n\n    }\n    return (\n        <>\n            <Navbar />\n            <div className='bookformholder'>\n                <form onSubmit={handleSubmit}><br />\n                    <p className='mytext'>Book a Room</p>\n                    <div className='form-group'>\n                        <label>Start Date</label>\n                        <input type='date' value={startDate} required name='startDate' onChange={handleChange} className='form-control myinput' />\n                    </div>\n                    <div className='form-group'>\n                        <label>End Date</label>\n                        <input type='date' className='form-control myinput' required value={endDate} name='endDate' onChange={handleChange} />\n                    </div>\n                    <div className='form-group'>\n                        <label>No of Persons</label>\n                        <input type='number' className='form-control myinput' required value={noOfPersons} name='noOfPersons' onChange={handleChange} />\n                    </div>\n                    <div className='form-group'>\n                        <label>No of Rooms</label>\n                        <input type='number' className='form-control myinput' required value={noOfRooms} name='noOfRooms' onChange={handleChange} />\n                    </div>\n                    <div className='form-group'>\n                        <label>Type of Room</label>\n                        <select className='form-control myinput' value={typeOfRoom} onChange={(e) => setTypeOfRoom(e.target.value)}>\n                            <option value=''>-- Select Room Type --</option>\n                            <option value='AC'>AC</option>\n                            <option value='Non AC'>Non AC</option>\n                        </select>\n                    </div>\n                    <button type='submit' className='regbtn'>Book</button><br /><br />\n                    <span className='text-success'>{successMessage}</span>\n                    <span className='text-danger'>{errorMessage}</span><br /><br />\n                </form>\n            </div>\n        </>\n    )\n\n}\n\nexport default BookRoomPage;","import React, { useState } from 'react';\nimport './addReview.css';\nimport axios from 'axios';\nimport Navbar from '../Navbar';\n\nconst AddReviewPage = (props) => {\n    const [reviews, setReviews] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newReview = { hotelName: props.match.params.hotelName, reviews: reviews }\n        addReview(newReview);\n    }\n    const addReview = (review) => {\n        var reviewsArr = [];\n        axios.get('http://localhost:4000/hotels/' + props.match.params.hotelId).then((res)=>{\n            reviewsArr = res.data.reviews;\n            reviewsArr.push(review.reviews)\n            axios.patch('http://localhost:4000/hotels/' + props.match.params.hotelId, {reviews:reviewsArr}).then((res) => {\n            if (res.data.status !== 'error') {\n                setSuccessMessage('Review added successfully');\n                setErrorMessage('');\n            }\n            else {\n                setErrorMessage('Could not add the review')\n                setSuccessMessage('')\n            }\n        })\n        })\n        \n    }\n    return (\n        <>\n            <Navbar />\n            <div className='reviewholder'>\n                <form onSubmit={handleSubmit}><br />\n                    <p className='mytext'>Your Reviews Means a Lot for Us</p>\n                    <div className='form-group'>\n                        <label>Add your Review</label>\n                        <textarea type='string' required value={reviews} onChange={(e) => setReviews(e.target.value)} className='form-control' rows='4' />\n                    </div>\n                    <button type='submit' className='reviewbtn'>Add Review</button>\n                    <span className='text-success'>{successMessage}</span>\n                    <span className='text-danger'>{errorMessage}</span><br /><br />\n                </form>\n            </div>\n        </>\n    )\n\n}\n\nexport default AddReviewPage;","import React from \"react\";\nimport './viewReviews.css';\n\nconst Review = ({ review }) => {\n    return (\n        <div className='subcard'>\n            {review}<br />\n        </div>\n    )\n}\nexport default Review;\n","import React from \"react\";\nimport Review from './review';\nimport './viewReviews.css';\n\nconst ReviewsList = ({ reviews }) => {\n    let reviewList;\n    if (reviews.length > 0) {\n        reviewList = reviews.map((review) => {\n            return (\n                <Review\n                    key={review}\n                    review={review}\n                />\n\n            );\n        });\n    }\n    else {\n        reviewList = 'No reviews added yet'\n    }\n    return <><br /><br /><br /><div className=\"reviewcard\"><br/>\n        <p className='mytext'>Customers' Reviews</p>\n        {reviewList}<br/><br/>\n    </div></>;\n};\nexport default ReviewsList;\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport ReviewsList from \"./ReviewList\";\nimport Navbar from '../Navbar';\n\nconst ViewReviewsPage = (props) => {\n    const [reviews, setReviews] = useState([])\n    useEffect(() => {\n        axios.get('http://localhost:4000/hotels/'+props.match.params.hotelId).then((res) => {\n            setReviews(res.data.reviews);\n        })\n    });\n    return (\n        <>\n            <Navbar />\n            <ReviewsList reviews={reviews} />\n        </>\n    )\n}\n\nexport default ViewReviewsPage;","import React from \"react\";\nimport './booking.css';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst Booking = ({ bookingId, startDate, endDate, hotelName, noOfPersons, noOfRooms, typeOfRoom, setBooking, props }) => {\n    const cancelBooking = () => {\n        const userId = localStorage.getItem('userId');\n        axios.delete('http://localhost:4000/bookings/' + bookingId).then((res) => {\n            if (res.data) {\n                var bookingArr = []\n                axios.get('http://localhost:4000/bookings').then((res) => {\n                    res.data.forEach(booking => {\n                        if (booking.userId === Number(userId)) {\n                            bookingArr.push(booking)\n                        }\n                    })\n                    setBooking(bookingArr);\n                })\n            }\n        });\n    }\n    const reschedule = () => {\n        console.log(props)\n        props.history.replace('/reschedule/' + bookingId);\n    }\n    return (\n        <>\n            <div className=\"col-md-3 cards\">\n                <div className=\"bookingcontent\">\n                    <h5 className=\"card-title\">Booking Id : {bookingId}</h5>\n                    <p className=\"cardText\">Hotel Name : {hotelName}</p>\n                    <p className=\"cardText\">Start Date : {new Date(startDate).toLocaleDateString()}</p>\n                    <p className=\"cardText\"> End Date : {new Date(endDate).toLocaleDateString()}</p>\n                    <p className=\"cardText\">No of Persons : {noOfPersons} </p>\n                    <p className=\"cardText\">No of Rooms : {noOfRooms}</p>\n                    <p className=\"cardText\">Type of Room : {typeOfRoom}</p>\n                    <button type='button' className='hotelBtn' onClick={reschedule}>Reschedule </button>\n                    <button type='button' className='hotelBtn' onClick={cancelBooking}>Cancel</button>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default Booking;\nBooking.defaultProps = {\n    bookingId: \"B-000\",\n    endDate: \"2020-01-02T00:00:00.000Z\",\n    hotelName: \"Paradise Stay\",\n    noOfPersons: 2,\n    noOfRooms: 2,\n    startDate: \"2020-01-01T00:00:00.000Z\",\n    typeOfRoom: \"AC\",\n    setBooking: () => {},\n}\n\nBooking.propTypes = {\n  /** Bookings data passed as props from BookingsList component */\n  /** BookingId  */\n  bookingId: PropTypes.string,\n   /** StartDate of booking */\n  startDate: PropTypes.string,\n  /** EndDate of booking */\n  endDate: PropTypes.string,\n   /** name of the hotel booked */\n  hotelName: PropTypes.string,\n   /** Number of persons for which hotel is booked */\n  noOfPersons: PropTypes.number,\n   /** Number of rooms booked */\n  noOfRooms: PropTypes.number,\n   /** Type of room booked */\n  typeOfRoom: PropTypes.string,\n   /** Method to update booking */\n  setBooking: PropTypes.func\n\n}","import React from \"react\";\nimport Booking from \"./booking\";\nimport \"./booking\";\n\nconst BookingsList = ({ bookings, setBooking, props }) => {\n    let bookingsList;\n    if (bookings.length > 0) {\n        bookingsList = bookings.map((booking) => {\n            return (\n                <Booking\n                    key={booking.id}\n                    bookingId={booking.id}\n                    startDate={booking.startDate}\n                    endDate={booking.endDate}\n                    hotelName={booking.hotelName}\n                    noOfPersons={booking.noOfPersons}\n                    noOfRooms={booking.noOfRooms}\n                    typeOfRoom={booking.typeOfRoom}\n                    setBooking={setBooking}\n                    props={props}\n                />\n            );\n        });\n        return <><br /><div className=\"row mycontainer\">{bookingsList}</div></>;\n    }\n    else {\n        bookingsList = 'No Bookings Yet.Book a Room and Enjoy the Stay.'\n        return <><br /><div className=\"mytext mybookingtext\">{bookingsList}</div></>;\n    }\n\n};\nexport default BookingsList;\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport BookingsList from \"./bookingsList\";\nimport Navbar from '../Navbar';\n\n\nconst BookingsPage = (props) => {\n    const [bookings, setBookings] = useState([])\n    useEffect(() => {\n        const userId = localStorage.getItem('userId')\n        var bookingArr = []\n        axios.get('http://localhost:4000/bookings').then((res) => {\n            res.data.forEach(booking=>{\n                if(booking.userId === Number(userId)){\n                    bookingArr.push(booking)\n                }\n            })\n            setBookings(bookingArr);\n        })\n    }, [])\n    return (\n        <>\n        <Navbar/>\n        <BookingsList bookings={bookings} setBooking={setBookings} props={props} />\n        </>\n    )\n}\n\nexport default BookingsPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport Navbar from '../Navbar';\n\nconst ReschedulePage = (props) => {\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newBooking = { bookingId: props.match.params.bookingId, startDate: startDate, endDate: endDate}\n        reschedulebook(newBooking);\n    }\n    const handleChange = (e) => {\n        if (e.target.name === 'startDate') {\n            setStartDate(e.target.value)\n            const validateStartDate = () => {\n                if (new Date(e.target.value) >= new Date()) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            if (!validateStartDate()) {\n                setErrorMessage('Start Date should not be a previous date')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n        else if (e.target.name === 'endDate') {\n            setEndDate(e.target.value)\n            const validateEndDate = () => {\n                if (new Date(e.target.value) >= new Date(startDate)) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            if (!startDate) {\n                setErrorMessage('Set Start Date first')\n            }\n            else if (!validateEndDate()) {\n                setErrorMessage('End Date should not be less than Start Date')\n            }\n            else {\n                setErrorMessage('')\n            }\n        }\n\n    }\n    const reschedulebook = (booking) => {\n        axios.patch('http://localhost:4000/bookings/'+booking.bookingId, booking).then((res) => {\n            if (res.data.status !== 'error') {\n                setSuccessMessage('Successfully rescheduled the booking');\n                setErrorMessage('');\n                setTimeout(() => { props.history.replace('/bookings') }, 1500)\n            }\n            else {\n                setErrorMessage(res.data.data.message)\n                setSuccessMessage('')\n            }\n        })\n    }\n    return (\n        <>\n            <Navbar />\n            <div className='bookformholder'>\n                <form onSubmit={handleSubmit}><br />\n                    <p className='mytext'>Book a Room</p>\n                    <div className='form-group'>\n                        <label>Start Date</label>\n                        <input type='date' required value={startDate} onChange={handleChange} className='form-control myinput' name='startDate' />\n                    </div>\n                    <div className='form-group'>\n                        <label>End Date</label>\n                        <input type='date' required className='form-control myinput' value={endDate} onChange={handleChange} name='endDate' />\n                    </div>\n                    <button type='submit' className='regbtn'>Reschedule</button><br /><br />\n                    <span className='text-success'>{successMessage}</span>\n                    <span className='text-danger'>{errorMessage}</span><br /><br />\n                </form>\n            </div>\n        </>\n    )\n\n}\n\nexport default ReschedulePage;","import React from 'react';\nimport './App.css';\nimport HotelPage from \"./components/hotels\";\nimport RegisterPage from './components/register/RegisterForm';\nimport LoginPage from './components/login/loginForm';\nimport HomePage from './components/home/homePage';\nimport BookRoomPage from './components/bookRoom/BookRoomPage';\nimport AddReviewPage from './components/addReview/addReviewPage';\nimport ViewReviewPage from './components/viewReviews';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport BookingsPage from './components/bookings';\nimport ReschedulePage from './components/reschedule/reschedulePage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={LoginPage} />\n        <Route path=\"/login\" exact component={LoginPage} />\n        <Route path=\"/hotels\" component={HotelPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <Route path=\"/home\" component={HomePage} />\n        <Route path=\"/bookRoom/:hotelId/:hotelName\" component={BookRoomPage} />\n        <Route path=\"/addReview/:hotelId/:hotelName\" component={AddReviewPage} />\n        <Route path=\"/viewReview/:hotelId\" component={ViewReviewPage} />\n        <Route path=\"/bookings\" component={BookingsPage} />\n        <Route path=\"/reschedule/:bookingId\" component={ReschedulePage} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}